-----------------------------------------------------------------------------
Info file generated by Happy Version 1.18.6 from Language/TNT/Parser.y
-----------------------------------------------------------------------------

state 24 contains 3 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> many_expressions                  (0)
	many_expressions -> many_reversed_expressions      (1)
	many_reversed_expressions ->                       (2)
	many_reversed_expressions -> many_reversed_expressions expression   (3)
	expression -> terminator                           (4)
	expression -> import                               (5)
	expression -> string                               (6)
	expression -> variable                             (7)
	expression -> access                               (8)
	expression -> mutate                               (9)
	expression -> invoke                               (10)
	terminator -> NEWLINE                              (11)
	terminator -> SEMI                                 (12)
	import -> IMPORT qualified_name terminator         (13)
	string -> STRING                                   (14)
	variable -> NAME                                   (15)
	access -> expression DOT NAME                      (16)
	mutate -> expression '=' expression                (17)
	invoke -> expression OPEN_PAREN many_expressions CLOSE_PAREN   (18)
	qualified_name -> NAME                             (19)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	IMPORT         { Token Token.Import _ }
	STRING         { Token (Token.String $$) _ }
	NAME           { Token (Name $$) _ }
	'='            { Token Equals _ }
	DOT            { Token Dot _ }
	OPEN_PAREN     { Token OpenParen _ }
	CLOSE_PAREN    { Token CloseParen _ }
	SEMI           { Token Semi _ }
	NEWLINE        { Token Newline _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	many_expressions rule  1
	many_reversed_expressions rules 2, 3
	expression      rules 4, 5, 6, 7, 8, 9, 10
	terminator      rules 11, 12
	import          rule  13
	string          rule  14
	variable        rule  15
	access          rule  16
	mutate          rule  17
	invoke          rule  18
	qualified_name  rule  19

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	IMPORT         reduce using rule 2
	STRING         reduce using rule 2
	NAME           reduce using rule 2
	SEMI           reduce using rule 2
	NEWLINE        reduce using rule 2
	%eof           reduce using rule 2

	many_expressionsgoto state 3
	many_reversed_expressionsgoto state 2

State 1



	many_reversed_expressionsgoto state 2

State 2

	many_expressions -> many_reversed_expressions .     (rule 1)
	many_reversed_expressions -> many_reversed_expressions . expression    (rule 3)

	IMPORT         shift, and enter state 12
	STRING         shift, and enter state 13
	NAME           shift, and enter state 14
	CLOSE_PAREN    reduce using rule 1
	SEMI           shift, and enter state 15
	NEWLINE        shift, and enter state 16
	%eof           reduce using rule 1

	expression     goto state 4
	terminator     goto state 5
	import         goto state 6
	string         goto state 7
	variable       goto state 8
	access         goto state 9
	mutate         goto state 10
	invoke         goto state 11

State 3

	%start_parser -> many_expressions .                 (rule 0)

	%eof           accept


State 4

	many_reversed_expressions -> many_reversed_expressions expression .    (rule 3)
	access -> expression . DOT NAME                     (rule 16)
	mutate -> expression . '=' expression               (rule 17)
	invoke -> expression . OPEN_PAREN many_expressions CLOSE_PAREN    (rule 18)

	IMPORT         reduce using rule 3
	STRING         reduce using rule 3
	NAME           reduce using rule 3
	'='            shift, and enter state 19
	DOT            shift, and enter state 20
	OPEN_PAREN     shift, and enter state 21
	CLOSE_PAREN    reduce using rule 3
	SEMI           reduce using rule 3
	NEWLINE        reduce using rule 3
	%eof           reduce using rule 3


State 5

	expression -> terminator .                          (rule 4)

	IMPORT         reduce using rule 4
	STRING         reduce using rule 4
	NAME           reduce using rule 4
	'='            reduce using rule 4
	DOT            reduce using rule 4
	OPEN_PAREN     reduce using rule 4
	CLOSE_PAREN    reduce using rule 4
	SEMI           reduce using rule 4
	NEWLINE        reduce using rule 4
	%eof           reduce using rule 4


State 6

	expression -> import .                              (rule 5)

	IMPORT         reduce using rule 5
	STRING         reduce using rule 5
	NAME           reduce using rule 5
	'='            reduce using rule 5
	DOT            reduce using rule 5
	OPEN_PAREN     reduce using rule 5
	CLOSE_PAREN    reduce using rule 5
	SEMI           reduce using rule 5
	NEWLINE        reduce using rule 5
	%eof           reduce using rule 5


State 7

	expression -> string .                              (rule 6)

	IMPORT         reduce using rule 6
	STRING         reduce using rule 6
	NAME           reduce using rule 6
	'='            reduce using rule 6
	DOT            reduce using rule 6
	OPEN_PAREN     reduce using rule 6
	CLOSE_PAREN    reduce using rule 6
	SEMI           reduce using rule 6
	NEWLINE        reduce using rule 6
	%eof           reduce using rule 6


State 8

	expression -> variable .                            (rule 7)

	IMPORT         reduce using rule 7
	STRING         reduce using rule 7
	NAME           reduce using rule 7
	'='            reduce using rule 7
	DOT            reduce using rule 7
	OPEN_PAREN     reduce using rule 7
	CLOSE_PAREN    reduce using rule 7
	SEMI           reduce using rule 7
	NEWLINE        reduce using rule 7
	%eof           reduce using rule 7


State 9

	expression -> access .                              (rule 8)

	IMPORT         reduce using rule 8
	STRING         reduce using rule 8
	NAME           reduce using rule 8
	'='            reduce using rule 8
	DOT            reduce using rule 8
	OPEN_PAREN     reduce using rule 8
	CLOSE_PAREN    reduce using rule 8
	SEMI           reduce using rule 8
	NEWLINE        reduce using rule 8
	%eof           reduce using rule 8


State 10

	expression -> mutate .                              (rule 9)

	IMPORT         reduce using rule 9
	STRING         reduce using rule 9
	NAME           reduce using rule 9
	'='            reduce using rule 9
	DOT            reduce using rule 9
	OPEN_PAREN     reduce using rule 9
	CLOSE_PAREN    reduce using rule 9
	SEMI           reduce using rule 9
	NEWLINE        reduce using rule 9
	%eof           reduce using rule 9


State 11

	expression -> invoke .                              (rule 10)

	IMPORT         reduce using rule 10
	STRING         reduce using rule 10
	NAME           reduce using rule 10
	'='            reduce using rule 10
	DOT            reduce using rule 10
	OPEN_PAREN     reduce using rule 10
	CLOSE_PAREN    reduce using rule 10
	SEMI           reduce using rule 10
	NEWLINE        reduce using rule 10
	%eof           reduce using rule 10


State 12

	import -> IMPORT . qualified_name terminator        (rule 13)

	NAME           shift, and enter state 18

	qualified_name goto state 17

State 13

	string -> STRING .                                  (rule 14)

	IMPORT         reduce using rule 14
	STRING         reduce using rule 14
	NAME           reduce using rule 14
	'='            reduce using rule 14
	DOT            reduce using rule 14
	OPEN_PAREN     reduce using rule 14
	CLOSE_PAREN    reduce using rule 14
	SEMI           reduce using rule 14
	NEWLINE        reduce using rule 14
	%eof           reduce using rule 14


State 14

	variable -> NAME .                                  (rule 15)

	IMPORT         reduce using rule 15
	STRING         reduce using rule 15
	NAME           reduce using rule 15
	'='            reduce using rule 15
	DOT            reduce using rule 15
	OPEN_PAREN     reduce using rule 15
	CLOSE_PAREN    reduce using rule 15
	SEMI           reduce using rule 15
	NEWLINE        reduce using rule 15
	%eof           reduce using rule 15


State 15

	terminator -> SEMI .                                (rule 12)

	IMPORT         reduce using rule 12
	STRING         reduce using rule 12
	NAME           reduce using rule 12
	'='            reduce using rule 12
	DOT            reduce using rule 12
	OPEN_PAREN     reduce using rule 12
	CLOSE_PAREN    reduce using rule 12
	SEMI           reduce using rule 12
	NEWLINE        reduce using rule 12
	%eof           reduce using rule 12


State 16

	terminator -> NEWLINE .                             (rule 11)

	IMPORT         reduce using rule 11
	STRING         reduce using rule 11
	NAME           reduce using rule 11
	'='            reduce using rule 11
	DOT            reduce using rule 11
	OPEN_PAREN     reduce using rule 11
	CLOSE_PAREN    reduce using rule 11
	SEMI           reduce using rule 11
	NEWLINE        reduce using rule 11
	%eof           reduce using rule 11


State 17

	import -> IMPORT qualified_name . terminator        (rule 13)

	SEMI           shift, and enter state 15
	NEWLINE        shift, and enter state 16

	terminator     goto state 25

State 18

	qualified_name -> NAME .                            (rule 19)

	SEMI           reduce using rule 19
	NEWLINE        reduce using rule 19


State 19

	mutate -> expression '=' . expression               (rule 17)

	IMPORT         shift, and enter state 12
	STRING         shift, and enter state 13
	NAME           shift, and enter state 14
	SEMI           shift, and enter state 15
	NEWLINE        shift, and enter state 16

	expression     goto state 24
	terminator     goto state 5
	import         goto state 6
	string         goto state 7
	variable       goto state 8
	access         goto state 9
	mutate         goto state 10
	invoke         goto state 11

State 20

	access -> expression DOT . NAME                     (rule 16)

	NAME           shift, and enter state 23


State 21

	invoke -> expression OPEN_PAREN . many_expressions CLOSE_PAREN    (rule 18)

	IMPORT         reduce using rule 2
	STRING         reduce using rule 2
	NAME           reduce using rule 2
	CLOSE_PAREN    reduce using rule 2
	SEMI           reduce using rule 2
	NEWLINE        reduce using rule 2

	many_expressionsgoto state 22
	many_reversed_expressionsgoto state 2

State 22

	invoke -> expression OPEN_PAREN many_expressions . CLOSE_PAREN    (rule 18)

	CLOSE_PAREN    shift, and enter state 26


State 23

	access -> expression DOT NAME .                     (rule 16)

	IMPORT         reduce using rule 16
	STRING         reduce using rule 16
	NAME           reduce using rule 16
	'='            reduce using rule 16
	DOT            reduce using rule 16
	OPEN_PAREN     reduce using rule 16
	CLOSE_PAREN    reduce using rule 16
	SEMI           reduce using rule 16
	NEWLINE        reduce using rule 16
	%eof           reduce using rule 16


State 24

	access -> expression . DOT NAME                     (rule 16)
	mutate -> expression . '=' expression               (rule 17)
	mutate -> expression '=' expression .               (rule 17)
	invoke -> expression . OPEN_PAREN many_expressions CLOSE_PAREN    (rule 18)

	IMPORT         reduce using rule 17
	STRING         reduce using rule 17
	NAME           reduce using rule 17
	'='            shift, and enter state 19
			(reduce using rule 17)

	DOT            shift, and enter state 20
			(reduce using rule 17)

	OPEN_PAREN     shift, and enter state 21
			(reduce using rule 17)

	CLOSE_PAREN    reduce using rule 17
	SEMI           reduce using rule 17
	NEWLINE        reduce using rule 17
	%eof           reduce using rule 17


State 25

	import -> IMPORT qualified_name terminator .        (rule 13)

	IMPORT         reduce using rule 13
	STRING         reduce using rule 13
	NAME           reduce using rule 13
	'='            reduce using rule 13
	DOT            reduce using rule 13
	OPEN_PAREN     reduce using rule 13
	CLOSE_PAREN    reduce using rule 13
	SEMI           reduce using rule 13
	NEWLINE        reduce using rule 13
	%eof           reduce using rule 13


State 26

	invoke -> expression OPEN_PAREN many_expressions CLOSE_PAREN .    (rule 18)

	IMPORT         reduce using rule 18
	STRING         reduce using rule 18
	NAME           reduce using rule 18
	'='            reduce using rule 18
	DOT            reduce using rule 18
	OPEN_PAREN     reduce using rule 18
	CLOSE_PAREN    reduce using rule 18
	SEMI           reduce using rule 18
	NEWLINE        reduce using rule 18
	%eof           reduce using rule 18


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 20
Number of terminals: 9
Number of non-terminals: 12
Number of states: 27
